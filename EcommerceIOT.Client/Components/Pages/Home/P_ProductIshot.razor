<div class="special-slide">
    <div class="container">
        <ul class="biolife-carousel dots_ring_style" data-slick='{"arrows": false, "dots": true, "slidesMargin": 30, "slidesToShow": 1, "infinite": true, "speed": 800, "responsive":[{"breakpoint":1200, "settings":{ "slidesToShow": 1}},{"breakpoint":768, "settings":{ "slidesToShow": 2, "slidesMargin":20, "dots": false}},{"breakpoint":480, "settings":{ "slidesToShow": 1}}]}'>
            @if(products != null && products.Any())
            {
                @foreach (var item in products)
                {
                   @if(item.IsHot == true)
                   {
                        <li>
                            <div class="slide-contain biolife-banner__special">
                                <div class="banner-contain">
                                    <div class="media">
                                        <a href="/chi-tiet-san-pham" class="bn-link">
                                            <figure><img src="@(string.IsNullOrEmpty(item.ImageFilePath) ? "/Img_Dev/banner.png" : item.ImageFilePath)" width="616" height="483" alt=""></figure>
                                        </a>
                                    </div>
                                    <div class="text-content">
                                        <span class="second-line">@item.Name </span>
                                        <div class="product-detail">
                                            <div class="price price-contain">
                                                <ins><span class="price-amount"><span class="currencySymbol"></span>@((item.Price - item.Discount).ToString("N0")) đ</span></ins>
                                                <del><span class="price-amount"><span class="currencySymbol"></span>@item.Discount.ToString("N0") đ</span></del>
                                            </div>
                                            <div class="buttons">
                                                <a onclick="window.location.href='/san-pham/@item.NameSlug/@item.Id';" class="btn add-to-cart-btn">Xem</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                   }
                }
            }
            
        </ul>
        <div class="biolife-service type01 biolife-service__type01 sm-margin-top-0 xs-margin-top-45px">
            <b class="txt-show-01">100%Nature</b>
            <i class="txt-show-02">Thiết bị IOT</i>
            <ul class="services-list">
                <li>
                    <div class="service-inner">
                        <span class="number">1</span>
                        <span class="biolife-icon icon-beer"></span>
                        <a class="srv-name" href="#">full stamped product</a>
                    </div>
                </li>
                <li>
                    <div class="service-inner">
                        <span class="number">2</span>
                        <span class="biolife-icon icon-schedule"></span>
                        <a class="srv-name" href="#">place and delivery on time</a>
                    </div>
                </li>
                <li>
                    <div class="service-inner">
                        <span class="number">3</span>
                        <span class="biolife-icon icon-car"></span>
                        <a class="srv-name" href="#">Free shipping in the city</a>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

@code{
    private IEnumerable<ProductDto> products;
    private int currentPage = 1;
    private int pageSize = 9;
    private int totalPages;
    private int totalCount;
    private int? type;

    private Guid? categoryId = null;
    private decimal? minPrice = null;
    private decimal? maxPrice = null;
    private string? keyword = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadListProducts();
    }

    private async Task LoadListProducts()
    {
        var response = await _productServices.GetListProductAsync(currentPage, pageSize, minPrice, maxPrice, categoryId, keyword, type);
        if (response != null && response.Success)
        {
            products = response.Data.Products;
        }
        else
        {
            products = new List<ProductDto>();
        }
    }
}