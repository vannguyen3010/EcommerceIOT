<!--Block 08: Blog Posts-->
<div class="blog-posts sm-margin-top-93px sm-padding-top-72px xs-padding-bottom-50px">
    <div class="container">
        <div class="biolife-title-box">
            <h3 class="main-title">Tin tức</h3>
        </div>
        <ul class="biolife-carousel nav-center nav-none-on-mobile xs-margin-top-36px" data-slick='{"rows":1,"arrows":true,"dots":false,"infinite":false,"speed":400,"slidesMargin":30,"slidesToShow":3, "responsive":[{"breakpoint":1200, "settings":{ "slidesToShow": 3}},{"breakpoint":992, "settings":{ "slidesToShow": 2}},{"breakpoint":768, "settings":{ "slidesToShow": 2}},{"breakpoint":600, "settings":{ "slidesToShow": 1}}]}'>
            @if(introduces != null && introduces.Any())
            {
                @foreach (var item in introduces)
                {
                    @if(item.IsHot == true)
                    {
                        <li>
                            <div class="post-item effect-01 style-bottom-info layout-02 ">
                                <div class="thumbnail">
                                    <a onclick="window.location.href='/tin-tuc/@item.NameSlug/@item.id';" class="link-to-post"><img src="@(string.IsNullOrEmpty(item.FilePath) ? "/Img_Dev/banner.png" : item.FilePath)" width="370" height="270" alt=""></a>
                                    <div class="post-date">
                                        <span class="date">Hot</span>
                                    </div>
                                </div>
                                <div class="post-content">
                                    <p class="excerpt">@item.CreatedAt.ToString("dd-MM-yyyy")</p>
                                    <h4 class="post-name"><a onclick="window.location.href='/tin-tuc/@item.NameSlug/@item.id';" class="linktopost">@item.Name</a></h4>
                                    <div class="group-buttons">
                                        <a onclick="window.location.href='/tin-tuc/@item.NameSlug/@item.id';" class="btn readmore">Xem thêm</a>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                   
                }
            }
           
        </ul>
    </div>
</div>

@code{
    private IEnumerable<IntroduceDto> introduces;

    private string? keyword = null;
    private Guid? categoryId = null;
    private int currentPage = 1;
    private int pageSize = 6;
    private int totalPages;
    private int totalCount;
    private int? type;
    protected override async Task OnInitializedAsync()
    {
        await LoadListIntroduces();
    }

    private async Task LoadListIntroduces()
    {
        var response = await _introducesServices.GetListIntroduceAsync(currentPage, pageSize, categoryId, keyword, type);

        if (response != null && response.Success)
        {
            introduces = response.Data.Introduces.Where(x => x.Status == true).ToList();
        }
        else
        {
            introduces = new List<IntroduceDto>();
        }

    }
}