@inject ProductServices _productServices


<div class="col-xl-6 col-md-12">
    <div class="card o-hidden card-hover">
        <div class="card-header card-header-top card-header--2 px-0 pt-0">
            <div class="card-header-title">
                <h4>Sản phẩm bán chạy nhất</h4>
            </div>
        </div>

        <div class="card-body p-0 card_body_scroll">
            <div>
                <div class="table-responsive">
                    <table class="best-selling-table w-image
                                            w-image
                                            w-image table border-0">
                        <tbody>
                            @if (products != null && products.Any())
                            {
                                @foreach (var item in products)
                                {

                                    <tr>
                                        <td>
                                            <div class="best-product-box">
                                                <div class="product-image">
                                                    <img src="@(string.IsNullOrEmpty(item.ImageFilePath) ? "/Img_Dev/banner.png" : item.ImageFilePath)"
                                                         class="img-fluid" alt="Product" onerror="this.onerror=null;this.src='/Img_Dev/banner.png';">
                                                </div>
                                                <div class="product-name no_wrap_1 w-50" data-bs-toggle="tooltip" data-bs-placement="bottom" title="@item.Name">
                                                    <h5>@item.Name</h5>
                                                </div>
                                            </div>
                                        </td>


                                        <td>
                                            <div class="product-detail-box">
                                                <h6>Giá</h6>
                                                <h5>@((item.Price - item.Discount).ToString("N0")) <span class="currency-symbol text-danger">đ</span></h5>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private IEnumerable<ProductDto> products;
    private IEnumerable<CateProductDto> cateProducts;

    private int currentPage = 1;
    private int pageSize = 20;
    private int totalPages;
    private int totalCount;
    private int? type;

    private Guid? categoryId = null;
    private decimal? minPrice = null;
    private decimal? maxPrice = null;
    private string? keyword = null;

    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {

        await LoadListProducts();
    }

    private async Task LoadListProducts()
    {

        var response = await _productServices.GetListProductAsync(currentPage, pageSize, minPrice, maxPrice, categoryId, keyword, type);
        if (response != null && response.Success)
        {
            products = response.Data.Products;
            totalCount = response.Data.TotalCount;
            totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
        }
        else
        {
            products = new List<ProductDto>();
        }
    }
}